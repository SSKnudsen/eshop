// <auto-generated />
using System;
using Datalayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Datalayer.Migrations
{
    [DbContext(typeof(EfstoreContext))]
    partial class EfstoreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebstoreConsole.Datalayer.Orders", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("UserId");

                    b.Property<DateTime>("dateoforder");

                    b.Property<string>("status");

                    b.HasKey("OrderId")
                        .HasName("OrderId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("WebstoreConsole.Entities.Productinfo", b =>
                {
                    b.Property<int>("productinfoID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Brand");

                    b.Property<bool>("Color");

                    b.Property<DateTime>("size");

                    b.HasKey("productinfoID")
                        .HasName("productinfoID");

                    b.ToTable("Prodinfo");
                });

            modelBuilder.Entity("WebstoreConsole.Entities.Products", b =>
                {
                    b.Property<int>("ClothingID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("name");

                    b.Property<int>("price");

                    b.Property<string>("status");

                    b.HasKey("ClothingID")
                        .HasName("ClothingID");

                    b.ToTable("Po");
                });

            modelBuilder.Entity("WebstoreConsole.Entities.Shopbasket", b =>
                {
                    b.Property<int>("Checkout_id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClothingID");

                    b.Property<string>("Name");

                    b.Property<string>("OrderLines");

                    b.Property<int>("Product_id");

                    b.Property<int>("Quantity");

                    b.HasKey("Checkout_id")
                        .HasName("Checkout_id");

                    b.ToTable("shopbaskets");
                });

            modelBuilder.Entity("WebstoreConsole.Entities.Userinformation", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<int>("CountryCode");

                    b.Property<string>("city");

                    b.Property<DateTime>("dateofbirth");

                    b.Property<string>("email");

                    b.Property<int>("fullname");

                    b.Property<string>("gender");

                    b.Property<string>("paymentO");

                    b.HasKey("id")
                        .HasName("id");

                    b.ToTable("userinf");
                });
#pragma warning restore 612, 618
        }
    }
}
